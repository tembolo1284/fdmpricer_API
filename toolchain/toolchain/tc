#!/bin/bash
set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

function ensure_docker_running {
    # Check if Docker daemon is running
    if ! docker info &>/dev/null; then
        echo "üêã Docker daemon not running. Attempting to start it..."
        if command -v systemctl &>/dev/null; then
            # For systemd-based systems
            sudo systemctl start docker || true
        else
            # For non-systemd systems
            sudo service docker start || true
        fi
        
        # Give it a moment to start
        sleep 2
        
        # Check again
        if ! docker info &>/dev/null; then
            echo "‚ö†Ô∏è Could not start Docker daemon automatically."
            echo "Please start it manually with: sudo service docker start"
            echo "Then run the command again."
            exit 1
        else
            echo "‚úÖ Docker daemon started successfully."
        fi
    fi
}

function show_help {
    echo "Python Toolchain (tc) - Manage Python development environments"
    echo ""
    echo "Commands:"
    echo "  setup    - Install the toolchain and dependencies"
    echo "  dev      - Start a containerized development environment"
    echo "  code     - Open VSCode with the development environment"
    echo "  help     - Show this help message"
    echo ""
}

if [ $# -eq 0 ]; then
    show_help
    exit 0
fi

COMMAND=$1
shift

case "$COMMAND" in
    setup)
        "$SCRIPT_DIR/toolchain/toolchain/scripts/setup.sh" "$@"
        ;;
    dev)
        ensure_docker_running
        "$SCRIPT_DIR/toolchain/toolchain/scripts/dev.sh" "$@"
        ;;
    code)
        ensure_docker_running
        "$SCRIPT_DIR/toolchain/toolchain/scripts/code.sh" "$@"
        ;;
    help)
        show_help
        ;;
    *)
        echo "Unknown command: $COMMAND"
        show_help
        exit 1
        ;;
esac
